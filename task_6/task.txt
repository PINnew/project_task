
1.  **Что такое индексы в SQL? Зачем они нужны?**

    Индексы в SQL — это специальные структуры данных, которые используются для ускорения поиска данных в таблицах.
    Индекс содержит копию одного или нескольких столбцов таблицы, отсортированную таким образом, чтобы обеспечить
    быстрый доступ к соответствующим строкам таблицы.

    **Зачем они нужны?**

    *   **Ускорение запросов**: Индексы позволяют СУБД быстро находить строки, соответствующие условиям запроса,
    без необходимости полного сканирования таблицы. Это особенно полезно для больших таблиц.
    *   **Ускорение операций сортировки и группировки**: Индексы могут быть использованы для ускорения
    операций `ORDER BY` и `GROUP BY`, если столбцы, используемые для сортировки или группировки, проиндексированы.
    *   **Обеспечение уникальности**: Индексы могут быть использованы для обеспечения уникальности значений
    в столбце (например, `UNIQUE INDEX`).

    Однако стоит помнить, что индексы занимают место на диске и требуют обслуживания при добавлении, изменении
    или удалении данных, поэтому их следует использовать обдуманно.

2.  **В чем разница между `INNER JOIN` и `LEFT JOIN`?**

    *   **`INNER JOIN`**: Возвращает только те строки, для которых есть совпадения в обеих таблицах,
    участвующих в соединении. Если в одной из таблиц нет соответствующей строки, то она не будет включена в результат.

        Пример:

        ```sql
        SELECT *
        FROM table1
        INNER JOIN table2 ON table1.column_name = table2.column_name;
        ```

    *   **`LEFT JOIN` (`LEFT OUTER JOIN`)**: Возвращает все строки из левой таблицы (таблицы, указанной до `LEFT JOIN`)
    и соответствующие строки из правой таблицы. Если в правой таблице нет соответствующей строки, то для столбцов
    правой таблицы будет возвращено значение `NULL`.

        Пример:

        ```sql
        SELECT *
        FROM table1
        LEFT JOIN table2 ON table1.column_name = table2.column_name;
        ```

    **Ключевое различие**: `INNER JOIN` возвращает только совпадающие строки, в то время как `LEFT JOIN` возвращает
    все строки из левой таблицы, даже если нет совпадений в правой таблице.

3.  **Что такое транзакция? Какие свойства транзакций вы знаете?**

    Транзакция — это последовательность операций базы данных, которая рассматривается как единое целое.
    Транзакция либо успешно завершается (commit), либо откатывается (rollback) в исходное состояние, если происходит ошибка.

    **Свойства транзакций (ACID)**:

    *   **Atomicity (Атомарность)**: Транзакция должна быть выполнена целиком или не выполнена вообще.
    Если какая-либо часть транзакции не может быть выполнена, все изменения, внесенные транзакцией, должны быть отменены.
    *   **Consistency (Согласованность)**: Транзакция должна переводить базу данных из одного согласованного состояния
    в другое. Это означает, что транзакция должна соблюдать все ограничения и правила целостности базы данных.
    *   **Isolation (Изолированность)**: Изменения, внесенные одной транзакцией, не должны быть видны другим транзакциям
    до тех пор, пока первая транзакция не будет зафиксирована (commit). Это предотвращает конфликты и обеспечивает
    корректность данных.
    *   **Durability (Долговечность)**: После того как транзакция была зафиксирована (commit), ее изменения должны быть
    сохранены навсегда и не должны быть потеряны в случае сбоя системы (например, отключения питания).

